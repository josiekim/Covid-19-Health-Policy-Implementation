{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactoryteam12"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/policy_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RegionName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegionCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Jurisdiction",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Jurisdiction",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "C1_School_closing",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C1_School_closing",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C1_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C1_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C2_Workplace_closing",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C2_Workplace_closing",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C2_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C2_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C3_Cancel_public_events",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C3_Cancel_public_events",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C3_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C3_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C4_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C4_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C5_Close_public_transport",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C5_Close_public_transport",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C5_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C5_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C6_Stay_at_home_requirements",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C6_Stay_at_home_requirements",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C6_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C6_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C7_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C7_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "C8_International_travel_controls",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "C8_International_travel_controls",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "E1_Income_support",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "E1_Income_support",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "E1_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "E1_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "E2_Debt_contract_relief",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "E2_Debt_contract_relief",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "E3_Fiscal_measures",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E3_Fiscal_measures",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "E4_International_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E4_International_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H1_Public_information_campaigns",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H1_Public_information_campaigns",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H1_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H1_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H2_Testing_policy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H2_Testing_policy",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H3_Contact_tracing",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H3_Contact_tracing",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H5_Investment_in_vaccines",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H5_Investment_in_vaccines",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H6_Facial_Coverings",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H6_Facial_Coverings",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H6_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H6_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H7_Vaccination_policy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H7_Vaccination_policy",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H7_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H7_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H8_Protection_of_elderly_people",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H8_Protection_of_elderly_people",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "H8_Flag",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "H8_Flag",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "M1_Wildcard",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "M1_Wildcard",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									},
									{
										"source": {
											"name": "StringencyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyLegacyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "GovernmentResponseIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "ContainmentHealthIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "EconomicSupportIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_rid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_rid",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_self",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_self",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_etag",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_etag",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_attachments",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_attachments",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_ts",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "_ts",
											"type": "Int64",
											"physicalType": "INT_64"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateFormat": "\"yyyy-MM-dd\"",
									"dateTimeFormat": "\"yyyy-MM-dd\"",
									"dateTimeOffsetFormat": "\"yyyy-MM-dd\""
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet_policy",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/population_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Country Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "2020",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "2021",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2_dates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullDate",
						"type": "date"
					},
					{
						"name": "isWeekDay",
						"type": "bit"
					},
					{
						"name": "DayOfWeek",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayName",
						"type": "varchar"
					},
					{
						"name": "WeekOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeekName",
						"type": "varchar"
					},
					{
						"name": "MonthOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthName",
						"type": "varchar"
					},
					{
						"name": "CalendarQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarQuarterName",
						"type": "varchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthName",
						"type": "varchar"
					},
					{
						"name": "FiscalQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalQuarterName",
						"type": "varchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dates"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable3_country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "CountryCode",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Country"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable_Covid_metrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "date"
					},
					{
						"name": "Confirmed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Confirmed_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "ISO2",
						"type": "varchar"
					},
					{
						"name": "ISO3",
						"type": "varchar"
					},
					{
						"name": "Country_Region",
						"type": "varchar"
					},
					{
						"name": "load_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19_Metrics"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dboCovid19_metrics_parquet",
								"type": "DatasetReference"
							},
							"name": "dbocovid19metrics"
						},
						{
							"dataset": {
								"referenceName": "Parquet_Covid19metrics",
								"type": "DatasetReference"
							},
							"name": "parquetcovid19metrics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet5",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "Parquet4",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "Parquet3",
								"type": "DatasetReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "recoveries"
						},
						{
							"name": "deaths"
						},
						{
							"name": "cases"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> dbocovid19metrics",
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> parquetcovid19metrics",
						"dbocovid19metrics, parquetcovid19metrics union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          Updated,",
						"          Recovered,",
						"          Recovered_Change,",
						"          Country_Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> recoveries",
						"union1 select(mapColumn(",
						"          Updated,",
						"          Deaths,",
						"          Deaths_Change,",
						"          Country_Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> deaths",
						"union1 select(mapColumn(",
						"          Updated,",
						"          Confirmed,",
						"          Confirmed_Change,",
						"          Country_Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> cases",
						"recoveries sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['recoveries_sink.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"deaths sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['deaths_sink.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2",
						"cases sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['cases_sink.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink3"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet_policy",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "policy_revised",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CountryName as string,",
						"          CountryCode as string,",
						"          RegionName as string,",
						"          RegionCode as string,",
						"          Jurisdiction as string,",
						"          Date as date,",
						"          C1_School_closing as long,",
						"          C1_Flag as long,",
						"          C2_Workplace_closing as long,",
						"          C2_Flag as long,",
						"          C3_Cancel_public_events as long,",
						"          C3_Flag as long,",
						"          C4_Restrictions_on_gatherings as long,",
						"          C4_Flag as long,",
						"          C5_Close_public_transport as long,",
						"          C5_Flag as long,",
						"          C6_Stay_at_home_requirements as long,",
						"          C6_Flag as long,",
						"          C7_Restrictions_on_internal_movement as long,",
						"          C7_Flag as long,",
						"          C8_International_travel_controls as long,",
						"          E1_Income_support as long,",
						"          E1_Flag as long,",
						"          E2_Debt_contract_relief as long,",
						"          E3_Fiscal_measures as double,",
						"          E4_International_support as double,",
						"          H1_Public_information_campaigns as long,",
						"          H1_Flag as long,",
						"          H2_Testing_policy as long,",
						"          H3_Contact_tracing as long,",
						"          H4_Emergency_investment_in_healthcare as double,",
						"          H5_Investment_in_vaccines as double,",
						"          H6_Facial_Coverings as long,",
						"          H6_Flag as long,",
						"          H7_Vaccination_policy as long,",
						"          H7_Flag as long,",
						"          H8_Protection_of_elderly_people as long,",
						"          H8_Flag as long,",
						"          M1_Wildcard as long,",
						"          StringencyIndex as double,",
						"          StringencyIndexForDisplay as double,",
						"          StringencyLegacyIndex as double,",
						"          StringencyLegacyIndexForDisplay as double,",
						"          GovernmentResponseIndex as double,",
						"          GovernmentResponseIndexForDisplay as double,",
						"          ContainmentHealthIndex as double,",
						"          ContainmentHealthIndexForDisplay as double,",
						"          EconomicSupportIndex as double,",
						"          EconomicSupportIndexForDisplay as double,",
						"          id as string,",
						"          {_rid} as string,",
						"          {_self} as string,",
						"          {_etag} as string,",
						"          {_attachments} as string,",
						"          {_ts} as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Country_Region as string",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['policy_sink.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/challenge 3 policy revised')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dboCountry')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable3_country",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_country",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-27T17:02:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable3_country')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dboCovid19_metrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable_Covid_metrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_Covid19metrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-27T17:02:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable_Covid_metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dboDates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable2_dates",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_dates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-27T17:02:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2_dates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/finalprojectdataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dbocovid19metrics": {},
									"parquetcovid19metrics": {},
									"sink1": {},
									"sink2": {},
									"sink3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}